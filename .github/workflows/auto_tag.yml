name: Auto Tag

on:
  pull_request:
    types:
      - closed

jobs:
  auto-tag:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          TAG=$(git tag --sort=-v:refname | grep '^v[0-9]' | head -n1)
          echo "latest_tag=$TAG" >> $GITHUB_OUTPUT

      - name: Parse and bump version
        id: bump
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          TAG=${{ steps.get_tag.outputs.latest_tag }}
          VERSION=${TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

          if [[ "$BRANCH_NAME" == major-* ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "$BRANCH_NAME" == feature-* ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ "$BRANCH_NAME" == fix-* ]]; then
            PATCH=$((PATCH + 1))
          else
            echo "Unsupported branch prefix: $BRANCH_NAME"
            exit 1
          fi

          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Configure Git for tag push
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Push new tag
        env:
          RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          NEW_TAG=${{ steps.bump.outputs.new_tag }}
          git tag "$NEW_TAG"
          git push https://x-access-token:${RELEASE_TOKEN}@github.com/${{ github.repository }} "$NEW_TAG"

      - name: Trigger release workflow manually
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          TAG=${{ steps.bump.outputs.new_tag }}
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/release.yml/dispatches \
            -d "{\"ref\": \"main\", \"inputs\": {\"tag\": \"$TAG\"}}"